"""
Created on Fri Mar 12 13:43:00 2021

@author: eliot
"""

import numpy as np

def Augmente(A,B):
    Aaug = np.concatenate((A,B.T),axis=1)
    return Aaug

def echangeligne(Aaug,L1,L2):
    X=Aaug[L1]
    Aaug[L1]=Aaug[L2]
    Aaug[L2]=X

def transvection(Aaug,L1,L2,k):
    for j in range(0, len(Aaug)+1):
        Aaug[L2][j]=Aaug[L2][j]+k*Aaug[L1][j]

def Pivotmax(Aaug,a):
    max=Aaug[a][a]
    indicemax=a
    for i in range(a,len(Aaug)):
        if Aaug[i][a]>max:
            max=Aaug[i][a]
            indicemax=i
    return(indicemax)


def ReductionGauss(Aaug):
    for j in range(0,len(Aaug)-1):
        pivot=Pivotmax(Aaug, j)
        echangeligne(Aaug, j, pivot)
        for i in range(j+1,len(Aaug)):
            k = -Aaug[i][j]/Aaug[j][j]
            transvection(Aaug, j, i, k)
    return Aaug

def ResolutionSystTriSup(Taug):
    n=len(Taug)
    X=[0]*n
    X[n-1]=Taug[n-1][n]/Taug[n-1][n-1]
    for i in range(n-2,-1,-1):
        X[i]=Taug[i][n]
        for j in range(i+1,n):
            X[i]=X[i]-Taug[i][j]*X[j]
        X[i]=X[i]/Taug[i][i]
    return(X)

def Gauss(A,B):
    Aaug=Augmente(A, B)
    Taug=ReductionGauss(Aaug)
    X=ResolutionSystTriSup(Taug)
    return(X)

A = np.random.rand(10,10)
B = np.random.rand(1,10)
# print(A)
# print(B)
import time
start_time = time.time()
X=Gauss(A, B)
# print(X)
print("--- %s seconds ---" % (time.time() - start_time))
